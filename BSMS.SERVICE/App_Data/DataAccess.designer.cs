#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BSMS.SERVICE.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


	public interface IDataAccessDataContext : IDisposable
	{
		void SaveChanges();
		System.Data.Linq.ITable<AUTHOR> AUTHORs { get; set; }

		System.Data.Linq.ITable<BOOK_AUTHOR> BOOK_AUTHORs { get; set; }

		System.Data.Linq.ITable<BOOK_CATEGORY> BOOK_CATEGORies { get; set; }

		System.Data.Linq.ITable<BOOK_SOFTCOPY> BOOK_SOFTCOPies { get; set; }

		System.Data.Linq.ITable<CATEGORY> CATEGORies { get; set; }

		System.Data.Linq.ITable<GENRE> GENREs { get; set; }

		System.Data.Linq.ITable<LANGUAGE> LANGUAGEs { get; set; }

		System.Data.Linq.ITable<PRODUCER> PRODUCERs { get; set; }

		System.Data.Linq.ITable<ROLE> ROLEs { get; set; }
		System.Data.Linq.ITable<USER> USERs { get; set; }

		System.Data.Linq.ITable<WATCHLIST> WATCHLISTs { get; set; }
		System.Data.Linq.ITable<BOOK_IMAGE> BOOK_IMAGEs { get; set; }

		System.Data.Linq.ITable<BOOK> BOOKs { get; set; }

		System.Data.Linq.ITable<VIEW> VIEWs { get; set; }

		System.Data.Linq.ITable<REVIEW> REVIEWs { get; set; }

		System.Data.Linq.ITable<RATING> RATINGs { get; set; }

		System.Data.Linq.ITable<LIKE> LIKEs { get; set; }

	}

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "BSMS")]

	public partial class DataAccessDataContext : System.Data.Linq.DataContext, IDataAccessDataContext
	{

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertAUTHOR(AUTHOR instance);
		partial void UpdateAUTHOR(AUTHOR instance);
		partial void DeleteAUTHOR(AUTHOR instance);
		partial void InsertBOOK_AUTHOR(BOOK_AUTHOR instance);
		partial void UpdateBOOK_AUTHOR(BOOK_AUTHOR instance);
		partial void DeleteBOOK_AUTHOR(BOOK_AUTHOR instance);
		partial void InsertBOOK_CATEGORY(BOOK_CATEGORY instance);
		partial void UpdateBOOK_CATEGORY(BOOK_CATEGORY instance);
		partial void DeleteBOOK_CATEGORY(BOOK_CATEGORY instance);
		partial void InsertBOOK_SOFTCOPY(BOOK_SOFTCOPY instance);
		partial void UpdateBOOK_SOFTCOPY(BOOK_SOFTCOPY instance);
		partial void DeleteBOOK_SOFTCOPY(BOOK_SOFTCOPY instance);
		partial void InsertCATEGORY(CATEGORY instance);
		partial void UpdateCATEGORY(CATEGORY instance);
		partial void DeleteCATEGORY(CATEGORY instance);
		partial void InsertGENRE(GENRE instance);
		partial void UpdateGENRE(GENRE instance);
		partial void DeleteGENRE(GENRE instance);
		partial void InsertLANGUAGE(LANGUAGE instance);
		partial void UpdateLANGUAGE(LANGUAGE instance);
		partial void DeleteLANGUAGE(LANGUAGE instance);
		partial void InsertPRODUCER(PRODUCER instance);
		partial void UpdatePRODUCER(PRODUCER instance);
		partial void DeletePRODUCER(PRODUCER instance);
		partial void InsertROLE(ROLE instance);
		partial void UpdateROLE(ROLE instance);
		partial void DeleteROLE(ROLE instance);
		partial void InsertUSER(USER instance);
		partial void UpdateUSER(USER instance);
		partial void DeleteUSER(USER instance);
		partial void InsertWATCHLIST(WATCHLIST instance);
		partial void UpdateWATCHLIST(WATCHLIST instance);
		partial void DeleteWATCHLIST(WATCHLIST instance);
		partial void InsertBOOK_IMAGE(BOOK_IMAGE instance);
		partial void UpdateBOOK_IMAGE(BOOK_IMAGE instance);
		partial void DeleteBOOK_IMAGE(BOOK_IMAGE instance);
		partial void InsertBOOK(BOOK instance);
		partial void UpdateBOOK(BOOK instance);
		partial void DeleteBOOK(BOOK instance);
		partial void InsertVIEW(VIEW instance);
		partial void UpdateVIEW(VIEW instance);
		partial void DeleteVIEW(VIEW instance);
		partial void InsertREVIEW(REVIEW instance);
		partial void UpdateREVIEW(REVIEW instance);
		partial void DeleteREVIEW(REVIEW instance);
		partial void InsertRATING(RATING instance);
		partial void UpdateRATING(RATING instance);
		partial void DeleteRATING(RATING instance);
		partial void InsertLIKE(LIKE instance);
		partial void UpdateLIKE(LIKE instance);
		partial void DeleteLIKE(LIKE instance);
		#endregion

		public DataAccessDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BSMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public DataAccessDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public DataAccessDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public System.Data.Linq.ITable<AUTHOR> AUTHORs
		{
			get
			{
				return this.GetTable<AUTHOR>();
			}
			set { }
		}

		public System.Data.Linq.ITable<BOOK_AUTHOR> BOOK_AUTHORs
		{
			get
			{
				return this.GetTable<BOOK_AUTHOR>();
			}
			set { }
		}

		public System.Data.Linq.ITable<BOOK_CATEGORY> BOOK_CATEGORies
		{
			get
			{
				return this.GetTable<BOOK_CATEGORY>();
			}
			set { }
		}

		public System.Data.Linq.ITable<BOOK_SOFTCOPY> BOOK_SOFTCOPies
		{
			get
			{
				return this.GetTable<BOOK_SOFTCOPY>();
			}
			set { }
		}

		public System.Data.Linq.ITable<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
			set { }
		}

		public System.Data.Linq.ITable<GENRE> GENREs
		{
			get
			{
				return this.GetTable<GENRE>();
			}
			set { }
		}

		public System.Data.Linq.ITable<LANGUAGE> LANGUAGEs
		{
			get
			{
				return this.GetTable<LANGUAGE>();
			}
			set { }
		}

		public System.Data.Linq.ITable<PRODUCER> PRODUCERs
		{
			get
			{
				return this.GetTable<PRODUCER>();
			}
			set { }
		}

		public System.Data.Linq.ITable<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
			set { }
		}

		public System.Data.Linq.ITable<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
			set { }
		}

		public System.Data.Linq.ITable<WATCHLIST> WATCHLISTs
		{
			get
			{
				return this.GetTable<WATCHLIST>();
			}
			set { }
		}

		public System.Data.Linq.ITable<BOOK_IMAGE> BOOK_IMAGEs
		{
			get
			{
				return this.GetTable<BOOK_IMAGE>();
			}
			set { }
		}

		public System.Data.Linq.ITable<BOOK> BOOKs
		{
			get
			{
				return this.GetTable<BOOK>();
			}
			set { }
		}

		public System.Data.Linq.ITable<VIEW> VIEWs
		{
			get
			{
				return this.GetTable<VIEW>();
			}
			set { }
		}

		public System.Data.Linq.ITable<REVIEW> REVIEWs
		{
			get
			{
				return this.GetTable<REVIEW>();
			}
			set { }
		}

		public System.Data.Linq.ITable<RATING> RATINGs
		{
			get
			{
				return this.GetTable<RATING>();
			}
			set { }
		}

		public System.Data.Linq.ITable<LIKE> LIKEs
		{
			get
			{
				return this.GetTable<LIKE>();
			}
			set { }
		}

		public void SaveChanges()
		{
			base.SubmitChanges();
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.AUTHOR")]
	public partial class AUTHOR : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AUTHORID;

		private string _FIRSTNAME;

		private string _LASTNAME;

		private string _MIDDLENAME;

		private string _BIOGRAPHY;

		private string _ALIASNAME;

		private string _THUMBNAIL_PATH;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAUTHORIDChanging(int value);
		partial void OnAUTHORIDChanged();
		partial void OnFIRSTNAMEChanging(string value);
		partial void OnFIRSTNAMEChanged();
		partial void OnLASTNAMEChanging(string value);
		partial void OnLASTNAMEChanged();
		partial void OnMIDDLENAMEChanging(string value);
		partial void OnMIDDLENAMEChanged();
		partial void OnBIOGRAPHYChanging(string value);
		partial void OnBIOGRAPHYChanged();
		partial void OnALIASNAMEChanging(string value);
		partial void OnALIASNAMEChanged();
		partial void OnTHUMBNAIL_PATHChanging(string value);
		partial void OnTHUMBNAIL_PATHChanged();
		#endregion

		public AUTHOR()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUTHORID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int AUTHORID
		{
			get
			{
				return this._AUTHORID;
			}
			set
			{
				if ((this._AUTHORID != value))
				{
					this.OnAUTHORIDChanging(value);
					this.SendPropertyChanging();
					this._AUTHORID = value;
					this.SendPropertyChanged("AUTHORID");
					this.OnAUTHORIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FIRSTNAME", DbType = "VarChar(12)")]
		public string FIRSTNAME
		{
			get
			{
				return this._FIRSTNAME;
			}
			set
			{
				if ((this._FIRSTNAME != value))
				{
					this.OnFIRSTNAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRSTNAME = value;
					this.SendPropertyChanged("FIRSTNAME");
					this.OnFIRSTNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LASTNAME", DbType = "VarChar(12)")]
		public string LASTNAME
		{
			get
			{
				return this._LASTNAME;
			}
			set
			{
				if ((this._LASTNAME != value))
				{
					this.OnLASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._LASTNAME = value;
					this.SendPropertyChanged("LASTNAME");
					this.OnLASTNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MIDDLENAME", DbType = "VarChar(12)")]
		public string MIDDLENAME
		{
			get
			{
				return this._MIDDLENAME;
			}
			set
			{
				if ((this._MIDDLENAME != value))
				{
					this.OnMIDDLENAMEChanging(value);
					this.SendPropertyChanging();
					this._MIDDLENAME = value;
					this.SendPropertyChanged("MIDDLENAME");
					this.OnMIDDLENAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BIOGRAPHY", DbType = "VarChar(1000)")]
		public string BIOGRAPHY
		{
			get
			{
				return this._BIOGRAPHY;
			}
			set
			{
				if ((this._BIOGRAPHY != value))
				{
					this.OnBIOGRAPHYChanging(value);
					this.SendPropertyChanging();
					this._BIOGRAPHY = value;
					this.SendPropertyChanged("BIOGRAPHY");
					this.OnBIOGRAPHYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ALIASNAME", DbType = "VarChar(8)")]
		public string ALIASNAME
		{
			get
			{
				return this._ALIASNAME;
			}
			set
			{
				if ((this._ALIASNAME != value))
				{
					this.OnALIASNAMEChanging(value);
					this.SendPropertyChanging();
					this._ALIASNAME = value;
					this.SendPropertyChanged("ALIASNAME");
					this.OnALIASNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_THUMBNAIL_PATH", DbType = "VarChar(70)")]
		public string THUMBNAIL_PATH
		{
			get
			{
				return this._THUMBNAIL_PATH;
			}
			set
			{
				if ((this._THUMBNAIL_PATH != value))
				{
					this.OnTHUMBNAIL_PATHChanging(value);
					this.SendPropertyChanging();
					this._THUMBNAIL_PATH = value;
					this.SendPropertyChanged("THUMBNAIL_PATH");
					this.OnTHUMBNAIL_PATHChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BOOK_AUTHOR")]
	public partial class BOOK_AUTHOR : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BOOK_AUTHORID;

		private System.Nullable<int> _BOOKID;

		private System.Nullable<int> _AUTHORID;

		private EntityRef<AUTHOR> _AUTHOR;

		private EntityRef<BOOK> _BOOK;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBOOK_AUTHORIDChanging(int value);
		partial void OnBOOK_AUTHORIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnAUTHORIDChanging(System.Nullable<int> value);
		partial void OnAUTHORIDChanged();
		#endregion

		public BOOK_AUTHOR()
		{
			this._AUTHOR = default(EntityRef<AUTHOR>);
			this._BOOK = default(EntityRef<BOOK>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOK_AUTHORID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int BOOK_AUTHORID
		{
			get
			{
				return this._BOOK_AUTHORID;
			}
			set
			{
				if ((this._BOOK_AUTHORID != value))
				{
					this.OnBOOK_AUTHORIDChanging(value);
					this.SendPropertyChanging();
					this._BOOK_AUTHORID = value;
					this.SendPropertyChanged("BOOK_AUTHORID");
					this.OnBOOK_AUTHORIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUTHORID", DbType = "Int")]
		public System.Nullable<int> AUTHORID
		{
			get
			{
				return this._AUTHORID;
			}
			set
			{
				if ((this._AUTHORID != value))
				{
					if (this._AUTHOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAUTHORIDChanging(value);
					this.SendPropertyChanging();
					this._AUTHORID = value;
					this.SendPropertyChanged("AUTHORID");
					this.OnAUTHORIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "AUTHOR_BOOK_AUTHOR", Storage = "_AUTHOR", ThisKey = "AUTHORID", OtherKey = "AUTHORID", IsForeignKey = true)]
		public AUTHOR AUTHOR
		{
			get
			{
				return this._AUTHOR.Entity;
			}
			set
			{
				if ((this._AUTHOR.Entity != value))
				{
					this.SendPropertyChanging();
					this._AUTHOR.Entity = value;
					this.SendPropertyChanged("AUTHOR");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_BOOK_AUTHOR", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BOOK_CATEGORY")]
	public partial class BOOK_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BOOK_CATEGORYID;

		private System.Nullable<int> _BOOKID;

		private System.Nullable<int> _CATEGORYID;

		private EntityRef<CATEGORY> _CATEGORY;

		private EntityRef<BOOK> _BOOK;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBOOK_CATEGORYIDChanging(int value);
		partial void OnBOOK_CATEGORYIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnCATEGORYIDChanging(System.Nullable<int> value);
		partial void OnCATEGORYIDChanged();
		#endregion

		public BOOK_CATEGORY()
		{
			this._CATEGORY = default(EntityRef<CATEGORY>);
			this._BOOK = default(EntityRef<BOOK>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOK_CATEGORYID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int BOOK_CATEGORYID
		{
			get
			{
				return this._BOOK_CATEGORYID;
			}
			set
			{
				if ((this._BOOK_CATEGORYID != value))
				{
					this.OnBOOK_CATEGORYIDChanging(value);
					this.SendPropertyChanging();
					this._BOOK_CATEGORYID = value;
					this.SendPropertyChanged("BOOK_CATEGORYID");
					this.OnBOOK_CATEGORYIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CATEGORYID", DbType = "Int")]
		public System.Nullable<int> CATEGORYID
		{
			get
			{
				return this._CATEGORYID;
			}
			set
			{
				if ((this._CATEGORYID != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATEGORYIDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORYID = value;
					this.SendPropertyChanged("CATEGORYID");
					this.OnCATEGORYIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "CATEGORY_BOOK_CATEGORY", Storage = "_CATEGORY", ThisKey = "CATEGORYID", OtherKey = "CATEGORYID", IsForeignKey = true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				if ((this._CATEGORY.Entity != value))
				{
					this.SendPropertyChanging();
					this._CATEGORY.Entity = value;
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_BOOK_CATEGORY", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BOOK_SOFTCOPY")]
	public partial class BOOK_SOFTCOPY : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BSCID;

		private System.Nullable<int> _BOOKID;

		private string _VERSION;

		private string _FILEPATH;

		private System.Nullable<double> _FILESIZE;

		private EntityRef<BOOK> _BOOK;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBSCIDChanging(int value);
		partial void OnBSCIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnVERSIONChanging(string value);
		partial void OnVERSIONChanged();
		partial void OnFILEPATHChanging(string value);
		partial void OnFILEPATHChanged();
		partial void OnFILESIZEChanging(System.Nullable<double> value);
		partial void OnFILESIZEChanged();
		#endregion

		public BOOK_SOFTCOPY()
		{
			this._BOOK = default(EntityRef<BOOK>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BSCID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VERSION", DbType = "VarChar(10)")]
		public string VERSION
		{
			get
			{
				return this._VERSION;
			}
			set
			{
				if ((this._VERSION != value))
				{
					this.OnVERSIONChanging(value);
					this.SendPropertyChanging();
					this._VERSION = value;
					this.SendPropertyChanged("VERSION");
					this.OnVERSIONChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FILEPATH", DbType = "VarChar(80) NOT NULL", CanBeNull = false)]
		public string FILEPATH
		{
			get
			{
				return this._FILEPATH;
			}
			set
			{
				if ((this._FILEPATH != value))
				{
					this.OnFILEPATHChanging(value);
					this.SendPropertyChanging();
					this._FILEPATH = value;
					this.SendPropertyChanged("FILEPATH");
					this.OnFILEPATHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FILESIZE", DbType = "Float")]
		public System.Nullable<double> FILESIZE
		{
			get
			{
				return this._FILESIZE;
			}
			set
			{
				if ((this._FILESIZE != value))
				{
					this.OnFILESIZEChanging(value);
					this.SendPropertyChanging();
					this._FILESIZE = value;
					this.SendPropertyChanged("FILESIZE");
					this.OnFILESIZEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_BOOK_SOFTCOPY", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _CATEGORYID;

		private string _NAME;

		private string _DESCRIPTION;

		private string _REFERENCE_KEY;

		private string _CATEGORY_THUMBNAIL;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCATEGORYIDChanging(int value);
		partial void OnCATEGORYIDChanged();
		partial void OnNAMEChanging(string value);
		partial void OnNAMEChanged();
		partial void OnDESCRIPTIONChanging(string value);
		partial void OnDESCRIPTIONChanged();
		partial void OnREFERENCE_KEYChanging(string value);
		partial void OnREFERENCE_KEYChanged();
		partial void OnCATEGORY_THUMBNAILChanging(string value);
		partial void OnCATEGORY_THUMBNAILChanged();
		#endregion

		public CATEGORY()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CATEGORYID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int CATEGORYID
		{
			get
			{
				return this._CATEGORYID;
			}
			set
			{
				if ((this._CATEGORYID != value))
				{
					this.OnCATEGORYIDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORYID = value;
					this.SendPropertyChanged("CATEGORYID");
					this.OnCATEGORYIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NAME", DbType = "VarChar(12) NOT NULL", CanBeNull = false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "VarChar(200)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_REFERENCE_KEY", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		public string REFERENCE_KEY
		{
			get
			{
				return this._REFERENCE_KEY;
			}
			set
			{
				if ((this._REFERENCE_KEY != value))
				{
					this.OnREFERENCE_KEYChanging(value);
					this.SendPropertyChanging();
					this._REFERENCE_KEY = value;
					this.SendPropertyChanged("REFERENCE_KEY");
					this.OnREFERENCE_KEYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CATEGORY_THUMBNAIL", DbType = "VarChar(80)")]
		public string CATEGORY_THUMBNAIL
		{
			get
			{
				return this._CATEGORY_THUMBNAIL;
			}
			set
			{
				if ((this._CATEGORY_THUMBNAIL != value))
				{
					this.OnCATEGORY_THUMBNAILChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_THUMBNAIL = value;
					this.SendPropertyChanged("CATEGORY_THUMBNAIL");
					this.OnCATEGORY_THUMBNAILChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.GENRE")]
	public partial class GENRE : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _GENREID;

		private string _NAME;

		private string _DESCRIPTION;

		private string _REFERENCE_KEY;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnGENREIDChanging(int value);
		partial void OnGENREIDChanged();
		partial void OnNAMEChanging(string value);
		partial void OnNAMEChanged();
		partial void OnDESCRIPTIONChanging(string value);
		partial void OnDESCRIPTIONChanged();
		partial void OnREFERENCE_KEYChanging(string value);
		partial void OnREFERENCE_KEYChanged();
		#endregion

		public GENRE()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GENREID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int GENREID
		{
			get
			{
				return this._GENREID;
			}
			set
			{
				if ((this._GENREID != value))
				{
					this.OnGENREIDChanging(value);
					this.SendPropertyChanging();
					this._GENREID = value;
					this.SendPropertyChanged("GENREID");
					this.OnGENREIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NAME", DbType = "VarChar(12) NOT NULL", CanBeNull = false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "VarChar(200)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_REFERENCE_KEY", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		public string REFERENCE_KEY
		{
			get
			{
				return this._REFERENCE_KEY;
			}
			set
			{
				if ((this._REFERENCE_KEY != value))
				{
					this.OnREFERENCE_KEYChanging(value);
					this.SendPropertyChanging();
					this._REFERENCE_KEY = value;
					this.SendPropertyChanged("REFERENCE_KEY");
					this.OnREFERENCE_KEYChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LANGUAGE")]
	public partial class LANGUAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _LANGUAGEID;

		private string _LANGUAGE1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnLANGUAGEIDChanging(int value);
		partial void OnLANGUAGEIDChanged();
		partial void OnLANGUAGE1Changing(string value);
		partial void OnLANGUAGE1Changed();
		#endregion

		public LANGUAGE()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LANGUAGEID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int LANGUAGEID
		{
			get
			{
				return this._LANGUAGEID;
			}
			set
			{
				if ((this._LANGUAGEID != value))
				{
					this.OnLANGUAGEIDChanging(value);
					this.SendPropertyChanging();
					this._LANGUAGEID = value;
					this.SendPropertyChanged("LANGUAGEID");
					this.OnLANGUAGEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "LANGUAGE", Storage = "_LANGUAGE1", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		public string LANGUAGE1
		{
			get
			{
				return this._LANGUAGE1;
			}
			set
			{
				if ((this._LANGUAGE1 != value))
				{
					this.OnLANGUAGE1Changing(value);
					this.SendPropertyChanging();
					this._LANGUAGE1 = value;
					this.SendPropertyChanged("LANGUAGE1");
					this.OnLANGUAGE1Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PRODUCER")]
	public partial class PRODUCER : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _PRODUCERID;

		private string _NAME;

		private string _ADDRESS;

		private string _CONTACT;

		private string _EMAIL;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnPRODUCERIDChanging(int value);
		partial void OnPRODUCERIDChanged();
		partial void OnNAMEChanging(string value);
		partial void OnNAMEChanged();
		partial void OnADDRESSChanging(string value);
		partial void OnADDRESSChanged();
		partial void OnCONTACTChanging(string value);
		partial void OnCONTACTChanged();
		partial void OnEMAILChanging(string value);
		partial void OnEMAILChanged();
		#endregion

		public PRODUCER()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PRODUCERID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int PRODUCERID
		{
			get
			{
				return this._PRODUCERID;
			}
			set
			{
				if ((this._PRODUCERID != value))
				{
					this.OnPRODUCERIDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCERID = value;
					this.SendPropertyChanged("PRODUCERID");
					this.OnPRODUCERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NAME", DbType = "VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ADDRESS", DbType = "VarChar(100)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONTACT", DbType = "VarChar(50)")]
		public string CONTACT
		{
			get
			{
				return this._CONTACT;
			}
			set
			{
				if ((this._CONTACT != value))
				{
					this.OnCONTACTChanging(value);
					this.SendPropertyChanging();
					this._CONTACT = value;
					this.SendPropertyChanged("CONTACT");
					this.OnCONTACTChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ROLE")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ROLEID;

		private string _ROLE1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnROLEIDChanging(int value);
		partial void OnROLEIDChanged();
		partial void OnROLE1Changing(string value);
		partial void OnROLE1Changed();
		#endregion

		public ROLE()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLEID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "ROLE", Storage = "_ROLE1", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string ROLE1
		{
			get
			{
				return this._ROLE1;
			}
			set
			{
				if ((this._ROLE1 != value))
				{
					this.OnROLE1Changing(value);
					this.SendPropertyChanging();
					this._ROLE1 = value;
					this.SendPropertyChanged("ROLE1");
					this.OnROLE1Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _USERID;

		private string _USERNAME;

		private string _PASSWORDHASH;

		private string _FIRSTNAME;

		private string _LASTNAME;

		private string _MIDDLENAME;

		private string _THUMBNAIL_PATH;

		private string _EMAIL;

		private System.Nullable<int> _ROLEID;

		private EntityRef<ROLE> _ROLE;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUSERIDChanging(int value);
		partial void OnUSERIDChanged();
		partial void OnUSERNAMEChanging(string value);
		partial void OnUSERNAMEChanged();
		partial void OnPASSWORDHASHChanging(string value);
		partial void OnPASSWORDHASHChanged();
		partial void OnFIRSTNAMEChanging(string value);
		partial void OnFIRSTNAMEChanged();
		partial void OnLASTNAMEChanging(string value);
		partial void OnLASTNAMEChanged();
		partial void OnMIDDLENAMEChanging(string value);
		partial void OnMIDDLENAMEChanged();
		partial void OnTHUMBNAIL_PATHChanging(string value);
		partial void OnTHUMBNAIL_PATHChanged();
		partial void OnEMAILChanging(string value);
		partial void OnEMAILChanged();
		partial void OnROLEIDChanging(System.Nullable<int> value);
		partial void OnROLEIDChanged();
		#endregion

		public USER()
		{
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERNAME", DbType = "VarChar(14) NOT NULL", CanBeNull = false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PASSWORDHASH", DbType = "VarChar(70) NOT NULL", CanBeNull = false)]
		public string PASSWORDHASH
		{
			get
			{
				return this._PASSWORDHASH;
			}
			set
			{
				if ((this._PASSWORDHASH != value))
				{
					this.OnPASSWORDHASHChanging(value);
					this.SendPropertyChanging();
					this._PASSWORDHASH = value;
					this.SendPropertyChanged("PASSWORDHASH");
					this.OnPASSWORDHASHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FIRSTNAME", DbType = "VarChar(20)")]
		public string FIRSTNAME
		{
			get
			{
				return this._FIRSTNAME;
			}
			set
			{
				if ((this._FIRSTNAME != value))
				{
					this.OnFIRSTNAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRSTNAME = value;
					this.SendPropertyChanged("FIRSTNAME");
					this.OnFIRSTNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LASTNAME", DbType = "VarChar(20)")]
		public string LASTNAME
		{
			get
			{
				return this._LASTNAME;
			}
			set
			{
				if ((this._LASTNAME != value))
				{
					this.OnLASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._LASTNAME = value;
					this.SendPropertyChanged("LASTNAME");
					this.OnLASTNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MIDDLENAME", DbType = "VarChar(20)")]
		public string MIDDLENAME
		{
			get
			{
				return this._MIDDLENAME;
			}
			set
			{
				if ((this._MIDDLENAME != value))
				{
					this.OnMIDDLENAMEChanging(value);
					this.SendPropertyChanging();
					this._MIDDLENAME = value;
					this.SendPropertyChanged("MIDDLENAME");
					this.OnMIDDLENAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_THUMBNAIL_PATH", DbType = "VarChar(70)")]
		public string THUMBNAIL_PATH
		{
			get
			{
				return this._THUMBNAIL_PATH;
			}
			set
			{
				if ((this._THUMBNAIL_PATH != value))
				{
					this.OnTHUMBNAIL_PATHChanging(value);
					this.SendPropertyChanging();
					this._THUMBNAIL_PATH = value;
					this.SendPropertyChanged("THUMBNAIL_PATH");
					this.OnTHUMBNAIL_PATHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLEID", DbType = "Int")]
		public System.Nullable<int> ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ROLE_USER", Storage = "_ROLE", ThisKey = "ROLEID", OtherKey = "ROLEID", IsForeignKey = true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				if ((this._ROLE.Entity != value))
				{
					this.SendPropertyChanging();
					this._ROLE.Entity = value;
					this.SendPropertyChanged("ROLE");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.WATCHLIST")]
	public partial class WATCHLIST : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _WATCHLISTID;

		private System.Nullable<int> _BOOKID;

		private System.Nullable<int> _USERID;

		private EntityRef<USER> _USER;

		private EntityRef<BOOK> _BOOK;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnWATCHLISTIDChanging(int value);
		partial void OnWATCHLISTIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnUSERIDChanging(System.Nullable<int> value);
		partial void OnUSERIDChanged();
		#endregion

		public WATCHLIST()
		{
			this._USER = default(EntityRef<USER>);
			this._BOOK = default(EntityRef<BOOK>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WATCHLISTID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int WATCHLISTID
		{
			get
			{
				return this._WATCHLISTID;
			}
			set
			{
				if ((this._WATCHLISTID != value))
				{
					this.OnWATCHLISTIDChanging(value);
					this.SendPropertyChanging();
					this._WATCHLISTID = value;
					this.SendPropertyChanged("WATCHLISTID");
					this.OnWATCHLISTIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", DbType = "Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_WATCHLIST", Storage = "_USER", ThisKey = "USERID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_WATCHLIST", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BOOK_IMAGE")]
	public partial class BOOK_IMAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BOOK_IMAGEID;

		private System.Nullable<int> _BOOKID;

		private string _IMAGEPATH;

		private EntityRef<BOOK> _BOOK;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBOOK_IMAGEIDChanging(int value);
		partial void OnBOOK_IMAGEIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnIMAGEPATHChanging(string value);
		partial void OnIMAGEPATHChanged();
		#endregion

		public BOOK_IMAGE()
		{
			this._BOOK = default(EntityRef<BOOK>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOK_IMAGEID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int BOOK_IMAGEID
		{
			get
			{
				return this._BOOK_IMAGEID;
			}
			set
			{
				if ((this._BOOK_IMAGEID != value))
				{
					this.OnBOOK_IMAGEIDChanging(value);
					this.SendPropertyChanging();
					this._BOOK_IMAGEID = value;
					this.SendPropertyChanged("BOOK_IMAGEID");
					this.OnBOOK_IMAGEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IMAGEPATH", DbType = "VarChar(150)")]
		public string IMAGEPATH
		{
			get
			{
				return this._IMAGEPATH;
			}
			set
			{
				if ((this._IMAGEPATH != value))
				{
					this.OnIMAGEPATHChanging(value);
					this.SendPropertyChanging();
					this._IMAGEPATH = value;
					this.SendPropertyChanged("IMAGEPATH");
					this.OnIMAGEPATHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_BOOK_IMAGE", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.BOOK")]
	public partial class BOOK : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BOOKID;

		private long _ISBN_NUMBER;

		private string _NAME;

		private string _STATUS;

		private string _SYNOPOSIS;

		private System.Nullable<bool> _ISPUBLISHED;

		private string _REFERENCE;

		private System.Nullable<System.DateTime> _DATE_PUBLISHED;

		private System.Nullable<System.DateTime> _CREATED_DATE;

		private System.Nullable<double> _PRICE;

		private System.Nullable<int> _PERCENTAGE_OFF;

		private System.Nullable<int> _GENREID;

		private System.Nullable<int> _STAFFID;

		private System.Nullable<int> _PRODUCERID;

		private System.Nullable<int> _TRANSLATEDFROM;

		private System.Nullable<int> _LANGUAGEID;

		private EntityRef<GENRE> _GENRE;

		private EntityRef<LANGUAGE> _LANGUAGE;

		private EntityRef<PRODUCER> _PRODUCER;

		private EntityRef<USER> _USER;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBOOKIDChanging(int value);
		partial void OnBOOKIDChanged();
		partial void OnISBN_NUMBERChanging(long value);
		partial void OnISBN_NUMBERChanged();
		partial void OnNAMEChanging(string value);
		partial void OnNAMEChanged();
		partial void OnSTATUSChanging(string value);
		partial void OnSTATUSChanged();
		partial void OnSYNOPOSISChanging(string value);
		partial void OnSYNOPOSISChanged();
		partial void OnISPUBLISHEDChanging(System.Nullable<bool> value);
		partial void OnISPUBLISHEDChanged();
		partial void OnREFERENCEChanging(string value);
		partial void OnREFERENCEChanged();
		partial void OnDATE_PUBLISHEDChanging(System.Nullable<System.DateTime> value);
		partial void OnDATE_PUBLISHEDChanged();
		partial void OnCREATED_DATEChanging(System.Nullable<System.DateTime> value);
		partial void OnCREATED_DATEChanged();
		partial void OnPRICEChanging(System.Nullable<double> value);
		partial void OnPRICEChanged();
		partial void OnPERCENTAGE_OFFChanging(System.Nullable<int> value);
		partial void OnPERCENTAGE_OFFChanged();
		partial void OnGENREIDChanging(System.Nullable<int> value);
		partial void OnGENREIDChanged();
		partial void OnSTAFFIDChanging(System.Nullable<int> value);
		partial void OnSTAFFIDChanged();
		partial void OnPRODUCERIDChanging(System.Nullable<int> value);
		partial void OnPRODUCERIDChanged();
		partial void OnTRANSLATEDFROMChanging(System.Nullable<int> value);
		partial void OnTRANSLATEDFROMChanged();
		partial void OnLANGUAGEIDChanging(System.Nullable<int> value);
		partial void OnLANGUAGEIDChanged();
		#endregion

		public BOOK()
		{
			this._GENRE = default(EntityRef<GENRE>);
			this._LANGUAGE = default(EntityRef<LANGUAGE>);
			this._PRODUCER = default(EntityRef<PRODUCER>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISBN_NUMBER", DbType = "BigInt NOT NULL")]
		public long ISBN_NUMBER
		{
			get
			{
				return this._ISBN_NUMBER;
			}
			set
			{
				if ((this._ISBN_NUMBER != value))
				{
					this.OnISBN_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._ISBN_NUMBER = value;
					this.SendPropertyChanged("ISBN_NUMBER");
					this.OnISBN_NUMBERChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NAME", DbType = "VarChar(30)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STATUS", DbType = "VarChar(10)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SYNOPOSIS", DbType = "VarChar(300) NOT NULL", CanBeNull = false)]
		public string SYNOPOSIS
		{
			get
			{
				return this._SYNOPOSIS;
			}
			set
			{
				if ((this._SYNOPOSIS != value))
				{
					this.OnSYNOPOSISChanging(value);
					this.SendPropertyChanging();
					this._SYNOPOSIS = value;
					this.SendPropertyChanged("SYNOPOSIS");
					this.OnSYNOPOSISChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISPUBLISHED", DbType = "Bit")]
		public System.Nullable<bool> ISPUBLISHED
		{
			get
			{
				return this._ISPUBLISHED;
			}
			set
			{
				if ((this._ISPUBLISHED != value))
				{
					this.OnISPUBLISHEDChanging(value);
					this.SendPropertyChanging();
					this._ISPUBLISHED = value;
					this.SendPropertyChanged("ISPUBLISHED");
					this.OnISPUBLISHEDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_REFERENCE", DbType = "VarChar(100)")]
		public string REFERENCE
		{
			get
			{
				return this._REFERENCE;
			}
			set
			{
				if ((this._REFERENCE != value))
				{
					this.OnREFERENCEChanging(value);
					this.SendPropertyChanging();
					this._REFERENCE = value;
					this.SendPropertyChanged("REFERENCE");
					this.OnREFERENCEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DATE_PUBLISHED", DbType = "DateTime")]
		public System.Nullable<System.DateTime> DATE_PUBLISHED
		{
			get
			{
				return this._DATE_PUBLISHED;
			}
			set
			{
				if ((this._DATE_PUBLISHED != value))
				{
					this.OnDATE_PUBLISHEDChanging(value);
					this.SendPropertyChanging();
					this._DATE_PUBLISHED = value;
					this.SendPropertyChanged("DATE_PUBLISHED");
					this.OnDATE_PUBLISHEDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CREATED_DATE", DbType = "DateTime")]
		public System.Nullable<System.DateTime> CREATED_DATE
		{
			get
			{
				return this._CREATED_DATE;
			}
			set
			{
				if ((this._CREATED_DATE != value))
				{
					this.OnCREATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE = value;
					this.SendPropertyChanged("CREATED_DATE");
					this.OnCREATED_DATEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PRICE", DbType = "Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PERCENTAGE_OFF", DbType = "Int")]
		public System.Nullable<int> PERCENTAGE_OFF
		{
			get
			{
				return this._PERCENTAGE_OFF;
			}
			set
			{
				if ((this._PERCENTAGE_OFF != value))
				{
					this.OnPERCENTAGE_OFFChanging(value);
					this.SendPropertyChanging();
					this._PERCENTAGE_OFF = value;
					this.SendPropertyChanged("PERCENTAGE_OFF");
					this.OnPERCENTAGE_OFFChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GENREID", DbType = "Int")]
		public System.Nullable<int> GENREID
		{
			get
			{
				return this._GENREID;
			}
			set
			{
				if ((this._GENREID != value))
				{
					if (this._GENRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGENREIDChanging(value);
					this.SendPropertyChanging();
					this._GENREID = value;
					this.SendPropertyChanged("GENREID");
					this.OnGENREIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STAFFID", DbType = "Int")]
		public System.Nullable<int> STAFFID
		{
			get
			{
				return this._STAFFID;
			}
			set
			{
				if ((this._STAFFID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTAFFIDChanging(value);
					this.SendPropertyChanging();
					this._STAFFID = value;
					this.SendPropertyChanged("STAFFID");
					this.OnSTAFFIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PRODUCERID", DbType = "Int")]
		public System.Nullable<int> PRODUCERID
		{
			get
			{
				return this._PRODUCERID;
			}
			set
			{
				if ((this._PRODUCERID != value))
				{
					if (this._PRODUCER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCERIDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCERID = value;
					this.SendPropertyChanged("PRODUCERID");
					this.OnPRODUCERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TRANSLATEDFROM", DbType = "Int")]
		public System.Nullable<int> TRANSLATEDFROM
		{
			get
			{
				return this._TRANSLATEDFROM;
			}
			set
			{
				if ((this._TRANSLATEDFROM != value))
				{
					this.OnTRANSLATEDFROMChanging(value);
					this.SendPropertyChanging();
					this._TRANSLATEDFROM = value;
					this.SendPropertyChanged("TRANSLATEDFROM");
					this.OnTRANSLATEDFROMChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LANGUAGEID", DbType = "Int")]
		public System.Nullable<int> LANGUAGEID
		{
			get
			{
				return this._LANGUAGEID;
			}
			set
			{
				if ((this._LANGUAGEID != value))
				{
					if (this._LANGUAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLANGUAGEIDChanging(value);
					this.SendPropertyChanging();
					this._LANGUAGEID = value;
					this.SendPropertyChanged("LANGUAGEID");
					this.OnLANGUAGEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "GENRE_BOOK", Storage = "_GENRE", ThisKey = "GENREID", OtherKey = "GENREID", IsForeignKey = true)]
		public GENRE GENRE
		{
			get
			{
				return this._GENRE.Entity;
			}
			set
			{
				if ((this._GENRE.Entity != value))
				{
					this.SendPropertyChanging();
					this._GENRE.Entity = value;
					this.SendPropertyChanged("GENRE");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "LANGUAGE_BOOK", Storage = "_LANGUAGE", ThisKey = "LANGUAGEID", OtherKey = "LANGUAGEID", IsForeignKey = true)]
		public LANGUAGE LANGUAGE
		{
			get
			{
				return this._LANGUAGE.Entity;
			}
			set
			{
				if ((this._LANGUAGE.Entity != value))
				{
					this.SendPropertyChanging();
					this._LANGUAGE.Entity = value;
					this.SendPropertyChanged("LANGUAGE");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PRODUCER_BOOK", Storage = "_PRODUCER", ThisKey = "PRODUCERID", OtherKey = "PRODUCERID", IsForeignKey = true)]
		public PRODUCER PRODUCER
		{
			get
			{
				return this._PRODUCER.Entity;
			}
			set
			{
				if ((this._PRODUCER.Entity != value))
				{
					this.SendPropertyChanging();
					this._PRODUCER.Entity = value;
					this.SendPropertyChanged("PRODUCER");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_BOOK", Storage = "_USER", ThisKey = "STAFFID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.[VIEW]")]
	public partial class VIEW : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _VIEWID;

		private System.Nullable<int> _USERID;

		private System.Nullable<int> _BOOKID;

		private EntityRef<BOOK> _BOOK;

		private EntityRef<USER> _USER;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVIEWIDChanging(int value);
		partial void OnVIEWIDChanged();
		partial void OnUSERIDChanging(System.Nullable<int> value);
		partial void OnUSERIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		#endregion

		public VIEW()
		{
			this._BOOK = default(EntityRef<BOOK>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VIEWID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int VIEWID
		{
			get
			{
				return this._VIEWID;
			}
			set
			{
				if ((this._VIEWID != value))
				{
					this.OnVIEWIDChanging(value);
					this.SendPropertyChanging();
					this._VIEWID = value;
					this.SendPropertyChanged("VIEWID");
					this.OnVIEWIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", DbType = "Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_VIEW", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_VIEW", Storage = "_USER", ThisKey = "USERID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.REVIEW")]
	public partial class REVIEW : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _REVIEWID;

		private System.Nullable<int> _USERID;

		private System.Nullable<int> _BOOKID;

		private string _REVIEW1;

		private EntityRef<BOOK> _BOOK;

		private EntityRef<USER> _USER;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnREVIEWIDChanging(int value);
		partial void OnREVIEWIDChanged();
		partial void OnUSERIDChanging(System.Nullable<int> value);
		partial void OnUSERIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnREVIEW1Changing(string value);
		partial void OnREVIEW1Changed();
		#endregion

		public REVIEW()
		{
			this._BOOK = default(EntityRef<BOOK>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_REVIEWID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int REVIEWID
		{
			get
			{
				return this._REVIEWID;
			}
			set
			{
				if ((this._REVIEWID != value))
				{
					this.OnREVIEWIDChanging(value);
					this.SendPropertyChanging();
					this._REVIEWID = value;
					this.SendPropertyChanged("REVIEWID");
					this.OnREVIEWIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", DbType = "Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "REVIEW", Storage = "_REVIEW1", DbType = "VarChar(500)")]
		public string REVIEW1
		{
			get
			{
				return this._REVIEW1;
			}
			set
			{
				if ((this._REVIEW1 != value))
				{
					this.OnREVIEW1Changing(value);
					this.SendPropertyChanging();
					this._REVIEW1 = value;
					this.SendPropertyChanged("REVIEW1");
					this.OnREVIEW1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_REVIEW", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_REVIEW", Storage = "_USER", ThisKey = "USERID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.RATING")]
	public partial class RATING : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _RATINGID;

		private System.Nullable<int> _USERID;

		private System.Nullable<int> _BOOKID;

		private System.Nullable<int> _RATING1;

		private EntityRef<BOOK> _BOOK;

		private EntityRef<USER> _USER;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnRATINGIDChanging(int value);
		partial void OnRATINGIDChanged();
		partial void OnUSERIDChanging(System.Nullable<int> value);
		partial void OnUSERIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		partial void OnRATING1Changing(System.Nullable<int> value);
		partial void OnRATING1Changed();
		#endregion

		public RATING()
		{
			this._BOOK = default(EntityRef<BOOK>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RATINGID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int RATINGID
		{
			get
			{
				return this._RATINGID;
			}
			set
			{
				if ((this._RATINGID != value))
				{
					this.OnRATINGIDChanging(value);
					this.SendPropertyChanging();
					this._RATINGID = value;
					this.SendPropertyChanged("RATINGID");
					this.OnRATINGIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", DbType = "Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "RATING", Storage = "_RATING1", DbType = "Int")]
		public System.Nullable<int> RATING1
		{
			get
			{
				return this._RATING1;
			}
			set
			{
				if ((this._RATING1 != value))
				{
					this.OnRATING1Changing(value);
					this.SendPropertyChanging();
					this._RATING1 = value;
					this.SendPropertyChanged("RATING1");
					this.OnRATING1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_RATING", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_RATING", Storage = "_USER", ThisKey = "USERID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.[LIKE]")]
	public partial class LIKE : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _LIKEID;

		private System.Nullable<int> _USERID;

		private System.Nullable<int> _BOOKID;

		private EntityRef<BOOK> _BOOK;

		private EntityRef<USER> _USER;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnLIKEIDChanging(int value);
		partial void OnLIKEIDChanged();
		partial void OnUSERIDChanging(System.Nullable<int> value);
		partial void OnUSERIDChanged();
		partial void OnBOOKIDChanging(System.Nullable<int> value);
		partial void OnBOOKIDChanged();
		#endregion

		public LIKE()
		{
			this._BOOK = default(EntityRef<BOOK>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LIKEID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int LIKEID
		{
			get
			{
				return this._LIKEID;
			}
			set
			{
				if ((this._LIKEID != value))
				{
					this.OnLIKEIDChanging(value);
					this.SendPropertyChanging();
					this._LIKEID = value;
					this.SendPropertyChanged("LIKEID");
					this.OnLIKEIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERID", DbType = "Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BOOKID", DbType = "Int")]
		public System.Nullable<int> BOOKID
		{
			get
			{
				return this._BOOKID;
			}
			set
			{
				if ((this._BOOKID != value))
				{
					if (this._BOOK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOOKIDChanging(value);
					this.SendPropertyChanging();
					this._BOOKID = value;
					this.SendPropertyChanged("BOOKID");
					this.OnBOOKIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "BOOK_LIKE", Storage = "_BOOK", ThisKey = "BOOKID", OtherKey = "BOOKID", IsForeignKey = true)]
		public BOOK BOOK
		{
			get
			{
				return this._BOOK.Entity;
			}
			set
			{
				if ((this._BOOK.Entity != value))
				{
					this.SendPropertyChanging();
					this._BOOK.Entity = value;
					this.SendPropertyChanged("BOOK");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "USER_LIKE", Storage = "_USER", ThisKey = "USERID", OtherKey = "USERID", IsForeignKey = true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				if ((this._USER.Entity != value))
				{
					this.SendPropertyChanging();
					this._USER.Entity = value;
					this.SendPropertyChanged("USER");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
