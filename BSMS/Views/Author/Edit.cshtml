@model BSMS.bsms.localhost.AUTHOR

@{
    ViewBag.Title = "Edit";
    ViewBag.Page = "Author";
    ViewBag.Action = "Edit Author Details";
    Layout = "~/Views/Shared/LDashboard.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-lg-4 col-xlg-3 col-md-5">
            <div class="card">
                <div class="card-block">
                    <center class="m-t-30">
                        <img src="@Model.THUMBNAIL_PATH" class="img-circle" width="150" />
                        <h4 class="card-title m-t-10">@Model.FIRSTNAME @Model.MIDDLENAME @Model.LASTNAME</h4>
                        <h6 class="card-subtitle"> @Model.BIOGRAPHY </h6>
                        
                    </center>
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-xlg-9 col-md-7">
            <div class="card">
                <div class="card-block">
                    @using (Html.BeginForm("Edit", "Author", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-material" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.AUTHORID)
                            <small>Update Author Informations</small>
                            <br>
                            <div class="form-group">
                                <br>
                                <label class="control-label col-md-12" for="FIRSTNAME"> * First Name</label>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FIRSTNAME, new { htmlAttributes = new { @class = "form-control form-control-line", required="true" } })
                                    @Html.ValidationMessageFor(model => model.FIRSTNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="LASTNAME" class="control-label col-md-12"> * Last Name </label>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.LASTNAME, new { htmlAttributes = new { @class = "form-control form-control-line", required="true" } })
                                    @Html.ValidationMessageFor(model => model.LASTNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="MIDDLENAME" class="control-label col-md-12"> Middle Name </label>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.MIDDLENAME, new { htmlAttributes = new { @class = "form-control form-control-line" } })
                                    @Html.ValidationMessageFor(model => model.MIDDLENAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="BIOGRAPHY" class="control-label col-md-12"> * Biography </label>
                                <div class="col-md-12">
                                    <textarea name="BIOGRAPHY" rows="5" class="form-control form-control-line" required> @Model.BIOGRAPHY </textarea>
                                    @Html.ValidationMessageFor(model => model.BIOGRAPHY, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="ALIASNAME" class="control-label col-md-12" > * Alias Name </label>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ALIASNAME, new { htmlAttributes = new { @class = "form-control form-control-line", required="true" } })
                                    @Html.ValidationMessageFor(model => model.ALIASNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="thumbnail" class="control-label col-md-12"> Photo </label>
                                <div class="col-md-12">
                                    <input type="file" name="thumbnail" class="form-control form-control-line" />
                                    @Html.ValidationMessageFor(model => model.THUMBNAIL_PATH, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                </div>



            </div>
        </div>
        </div>
    </div>





@if (!String.IsNullOrEmpty(ViewBag.Message))
{
    <script>

        var message = '@ViewBag.Message';
        swal({
            title: 'Walting',
            text: 'BSMS is Processing your Request',
            timer: 3000,
            type: 'error',
            background: '#fff url(http://www.planwallpaper.com/static/images/518151-backgrounds_W3qVPu2.jpg)'
        }).then(
        function () { },
// handling the promise rejection
            function (dismiss) {
                swal(
              'Information Message',
                message,
              'info'
            )
                window.location = '@Url.Action("Index","Author")';
            }
        )

    </script>
}


@if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <script>
        var message = '@ViewBag.ErrorMessage';
        swal({
            title: 'Error Message',
            text: message,
            type: 'error',
            background: '#fff url(http://www.planwallpaper.com/static/images/518151-backgrounds_W3qVPu2.jpg)'
        })
    </script>
}
